function getNewWorld(e){var t=new World(e);return t.addTokens(5,15),t}function startServer(){for(var e=0;6>=e;e++)worlds.push(getNewWorld(e));io.on("connection",function(e){log.debug("New connection",e.id);var t=new Player;t.newGame(e),e.on("new-game",function(n){t.newGame(e)}),e.on("tank-state",function(e){t.receiveGameState(e)})})}function Player(){this.playerId=nextPlayerId,nextPlayerId++,this.level=0,this.world=worlds[this.level],this.events=[],this.landscapeChanged=!0,this.playerName=""}function Tank(e,t){this.tankId=nextTankId,nextTankId++,this.worldIndex=e;worlds[this.worldIndex];this.events={movements:[],gun:[],state:[]}}function Token(e,t){this.xpos=e,this.ypos=t,this.tokenId=nextTokenId,this.events=[],nextTokenId++}function World(e){this.worldDuration=3e5,this.height=2e3+400*e,this.width=3e3+400*e,this.events=[],this.tanks=[],this.tokens=[],this.floaters=[],this.sealevel=8*e,this.landscapeSeed=Math.floor(1e4*Math.random()),this.level=e}var io=require("sandbox-io"),noise=require("./js/perlin.js"),worlds=[],nextTankId=1,nextTokenId=1,nextPlayerId=1,players=[],maxPlayersPerLevel=20;Player.prototype.newGame=function(e){this.world=worlds[this.level],this.world.tanks.length>maxPlayersPerLevel+2*this.level&&(this.world.deleteWorld(),worlds[this.level]=getNewWorld(this.level),this.world=worlds[this.level],this.landscapeChanged=!0),this.tank=new Tank(0,this);var t={player:this.tank.toPlainObject(),world:this.world.toPlainObject(),lastTank:this.lastTank,landscapeChanged:this.landscapeChanged};e.emit("receive-game",t),this.lastTank=this.tank},Player.prototype.receiveGameState=function(e){this.world.addTank(this.tank),this.world.addTokens(2,5),this.landscapeChanged=!1,e.levelComplete&&(this.level++,this.landscapeChanged=!0),this.level>6&&(this.level=0,this.landscapeChanged=!0),e.player.playerName&&(this.playerName=e.player.playerName,this.tank.playerName=e.player.playerName),this.tank.addEvents(e.eventQueues.player),this.world.tokens.forEach(function(t){if(e.eventQueues.tokens[t.tokenId]){var n=e.eventQueues.tokens[t.tokenId];t.addEvents(n)}}),this.world.floaters.forEach(function(t){if(e.eventQueues.floaters[t.id]){var n=e.eventQueues.floaters[t.id];t.addEvents(n)}})},Tank.prototype.toPlainObject=function(){return{tankId:this.tankId,events:this.events,playerName:this.playerName}},Tank.prototype.addEvents=function(e){this.events.movements.push.apply(this.events.movements,e.movements),this.events.gun.push.apply(this.events.gun,e.gun),this.events.state.push.apply(this.events.state,e.state)},Token.prototype.toPlainObject=function(){return{xpos:this.xpos,ypos:this.ypos,tokenId:this.tokenId,id:this.tokenId,events:this.events}},Token.prototype.addEvents=function(e){this.events.push.apply(this.events,e)},World.prototype.addTokens=function(e,t){noise.seed(this.landscapeSeed);for(var n=0,s=0;e>n||t>s;){var a=Math.floor(Math.random()*this.width),o=Math.floor(Math.random()*this.height),i=Math.abs(noise.perlin2(a/600,o/600));i*=256,i=Math.min(256,i+this.sealevel),i>70&&80>i&&e>n&&(this.tokens.push(new Token(a,o)),n++),i<40+this.sealevel&&t>s&&(this.floaters.push(new Token(a,o)),s++)}},World.prototype.deleteWorld=function(){this.tanks=[],this.tokens=[]},World.prototype.addTank=function(e){this.tanks.push(e)},World.prototype.addEvents=function(e){this.events.push.apply(this.events,e.player),this.tokens.forEach(function(t){if(e.tokens[t.tokenId]){var n=e.tokens[t.tokenId];t.addEvents(n)}})},World.prototype.toPlainObject=function(){var e={sealevel:this.sealevel,level:this.level,worldDuration:this.worldDuration,height:this.height,width:this.width,landscapeSeed:this.landscapeSeed,players:this.tanks.map(function(e){return e.toPlainObject()}),tokens:this.tokens.map(function(e){return e.toPlainObject()}),floaters:this.floaters.map(function(e){return e.toPlainObject()})};return e},startServer();